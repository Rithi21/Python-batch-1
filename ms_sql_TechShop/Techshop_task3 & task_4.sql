use TechShop;
--Task 3. Aggregate functions, Having, Order By, GroupBy and Joins:  
--1. Write an SQL query to retrieve a list of all orders along with customer information (e.g., 
--customer name) for each order. 

select O.OrderID, C.CustomerID,CONCAT( C.FirstName,' ',C.LastName) as Name, C.Email, C.Phone, C.Address, O.OrderDate, O.TotalAmount
FROM Orders O
INNER JOIN Customers C ON O.CustomerID = C.CustomerID;


--2. Write an SQL query to find the total revenue generated by each electronic gadget product. 
--Include the product name and the total revenue. 

SELECT P.ProductName,SUM(OD.Quantity * P.Price) AS TotalRevenue
FROM OrderDetails OD
JOIN Products P ON OD.ProductID = P.ProductID
GROUP BY ProductName
ORDER BY TotalRevenue DESC;


--3. Write an SQL query to list all customers who have made at least one purchase. Include their 
--names and contact information. 

select DISTINCT C.CustomerID, CONCAT( C.FirstName,' ',C.LastName) as Name, C.Email, C.Phone, C.Address
from Customers C
JOIN Orders O ON C.CustomerID = O.CustomerID;

--4. Write an SQL query to find the most popular electronic gadget, which is the one with the highest 
--total quantity ordered. Include the product name and the total quantity ordered. 

SELECT TOP 1 P.ProductName, SUM(OD.Quantity) AS TotalQuantityOrdered
FROM OrderDetails OD
JOIN Products P ON OD.ProductID = P.ProductID
GROUP BY P.ProductName
ORDER BY TotalQuantityOrdered DESC

--5. Write an SQL query to retrieve a list of electronic gadgets along with their corresponding categories. 
Alter table Products add Category varchar(50);

update Products SET Category = 'Electronics' WHERE ProductID IN (1, 2, 3, 4, 6, 7, 8, 10);
update Products SET Category = 'Furniture' WHERE ProductID IN (5, 9);

select ProductName, Category from Products WHERE Category = 'Electronics';

--6. Write an SQL query to calculate the average order value for each customer. Include the 
--customer's name and their average order value. 

select C.CustomerID, C.FirstName, C.LastName, AVG(O.TotalAmount) AS AvgOrderValue
from Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID, C.FirstName, C.LastName


--7. Write an SQL query to find the order with the highest total revenue. Include the order ID, 
--customer information, and the total revenue. 
select TOP 1 O.OrderID, C.CustomerID, CONCAT( C.FirstName,' ',C.LastName) as Name, O.TotalAmount
from Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
ORDER BY O.TotalAmount DESC

--8. Write an SQL query to list electronic gadgets and the number of times each product has been 
--ordered. 
select P.ProductName, COUNT(OD.OrderID) AS NumberOfOrders from OrderDetails OD
JOIN Products P ON OD.ProductID = P.ProductID
GROUP BY P.ProductName
ORDER BY NumberOfOrders DESC;


--9. Write an SQL query to find customers who have purchased a specific electronic gadget product. 
--Allow users to input the product name as a parameter. 
select DISTINCT C.CustomerID, C.FirstName, C.LastName, C.Email, C.Phone, C.Address
from Customers C JOIN Orders O ON C.CustomerID = O.CustomerID
JOIN OrderDetails OD ON O.OrderID = OD.OrderID
JOIN Products P ON OD.ProductID = P.ProductID
where P.ProductName = 'Laptop';  

--10. Write an SQL query to calculate the total revenue generated by all orders placed within a 
--specific time period. Allow users to input the start and end dates as parameters.
select SUM(O.TotalAmount) AS TotalRevenue
from Orders O
where O.OrderDate BETWEEN '2025-03-12' AND '2025-03-19';  


-- Additional Orders 
INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)
VALUES 

(12, 5, '2025-03-24', 30000),
(13, 8, '2025-03-20', 50000),
(14, 7, '2025-03-21', 60000),
(15, 10, '2025-03-19', 75000),
(16, 5, '2025-03-23', 80000)

-- Additional OrderDetails 
INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity)
VALUES 
(11, 11, 6, 3),
(12, 12, 6, 3),
(13, 13, 9, 2),
(14, 14, 1, 5),
(15, 15, 4, 7),
(16, 16, 8, 4);

-- Additional Inventory updates 
INSERT INTO Inventory (InventoryID, ProductID, QuantityInStock, LastStockUpdate)
VALUES 
(11, 6, 25, '2025-03-22'),
(12, 9, 97, '2025-03-23'),
(13, 1, 21, '2025-03-24'),
(14, 4, 16, '2025-03-25'),
(15, 8, 53, '2025-03-26'),
(16, 7, 12, '2025-03-28');

--Task 4. Subquery and its type:  

--1. Write an SQL query to find out which customers have not placed any orders. 
select * from Customers where CustomerID not in (select CustomerID from Orders)

--2. Write an SQL query to find the total number of products available for sale.
SELECT COUNT(*) AS TotalProducts FROM Products;

--3. Write an SQL query to calculate the total revenue generated by TechShop. 
select sum(TotalAmount) as total_revenue from Orders

--4. Write an SQL query to calculate the average quantity ordered for products in a specific category. 
--Allow users to input the category name as a parameter.

select p.Category,AVG(od.Quantity) from Products as p join OrderDetails od on p.ProductID= od.ProductID 
where Category='Electronics' group by Category

--5. Write an SQL query to calculate the total revenue generated by a specific customer. Allow users 
--to input the customer ID as a parameter. 

select c.CustomerID,CONCAT(c.FirstName,' ',c.LastName) as Name,Sum(o.TotalAmount) as total_revenue from Customers as c 
join Orders as o on c.CustomerID=o.CustomerID where c.CustomerID = 5 group by c.CustomerID, c.FirstName,c.LastName


--6. Write an SQL query to find the customers who have placed the most orders. List their names 
--and the number of orders they've placed.

select CustomerID, CONCAT(FirstName, ' ', LastName) AS Name,TotalOrders from Customers where  TotalOrders= (select Max(TotalOrders) from Customers)


--7. Write an SQL query to find the most popular product category, which is the one with the highest 
--total quantity ordered across all orders. 

SELECT TOP 1 p.Category, SUM(od.Quantity) AS TotalOrderedQuantity
FROM Products AS p
JOIN OrderDetails AS od ON p.ProductID = od.ProductID
GROUP BY p.Category
ORDER BY TotalOrderedQuantity DESC





--8. Write an SQL query to find the customer who has spent the most money (highest total revenue) 
--on electronic gadgets. List their name and total spending.

SELECT TOP 1 c.CustomerID, CONCAT(c.FirstName, ' ', c.LastName) AS Name, SUM(od.Quantity * p.Price) AS TotalSpending
FROM Customers AS c
JOIN Orders AS o ON c.CustomerID = o.CustomerID
JOIN OrderDetails AS od ON o.OrderID = od.OrderID
JOIN Products AS p ON od.ProductID = p.ProductID
WHERE p.Category = 'Electronics'  -- Change 'Electronics' based on actual category names
GROUP BY c.CustomerID, c.FirstName, c.LastName
ORDER BY TotalSpending DESC


--9. Write an SQL query to calculate the average order value (total revenue divided by the number of orders) for all customers. 

Select CustomerId,Avg(TotalAmount) AS Average_OrderValue
FROM Orders group by CustomerID;

--10. Write an SQL query to find the total number of orders placed by each customer and list their 
--names along with the order count.

select c.CustomerID,CONCAT(c.FirstName,' ',c.LastName) as Name,COUNT(o.OrderID) as Order_Count from Customers as c 
Left join Orders as o on c.CustomerID=o.CustomerID group by c.CustomerID, c.FirstName,c.LastName
order by Order_Count asc





